'''
Given two strings s and t which consist of only lowercase letters.

String t is generated by random shuffling string s and then add one more letter at a random position.

Find the letter that was added in t.

Example:

Input:
s = "abcd"
t = "abcde"

Output:
e

Explanation:
'e' is the letter that was added.

'''
'''
ord(c)
Given a string of length one, return an integer representing the Unicode code point of the character when the argument is a unicode object, 
or the value of the byte when the argument is an 8-bit string. For example, ord('a') returns the integer 97, ord(u'\u2020') returns 8224. 
This is the inverse of chr() for 8-bit strings and of unichr() for unicode objects. If a unicode argument is given and Python was 
built with UCS2 Unicode, then the characterâ€™s code point must be in the range [0..65535] inclusive; otherwise the string length 
is two, and a TypeError will be raised.


TO GO OTHER WAY USE THIS:

chr(a)

'''

class Solution(object):
    def findTheDifference(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: str
        """

        # easy way is with map but lets use xor
        if (s == ""):
            return t[0]

        a = ord(s[0])
        for i in range(1, len(s)):
            a ^= ord(s[i])

        for i in t:
            a ^= ord(i)

        return chr(a)